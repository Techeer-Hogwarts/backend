name: Prod CI

on:
  push:
    tags:
      - 'v*'  # This will match any tag starting with 'v' (e.g., v1.0.0, v2.1.0)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set Docker Image Tag
        id: set_docker_image_tag
        run: |
          # Extract tag name without 'refs/tags/' prefix
          DOCKER_IMAGE_TAG="${GITHUB_REF#refs/tags/}"
          echo "Docker Image Tag: $DOCKER_IMAGE_TAG"
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_IMAGE_TAG: ${{ steps.set_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/techeerism-spring:$DOCKER_IMAGE_TAG .

      - name: Send Image and Version to Slack
        if: github.ref == 'refs/heads/main' # main 브랜치에 머지 시에만 실행
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/techeerism-spring
          DOCKER_IMAGE_TAG: ${{ steps.set_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
          SLACK_SECRET: ${{ secrets.SLACK_DEPLOY_SECRET }}
          X_API_KEY: ${{ secrets.X_API_KEY }}
        run: |
          commit_link="https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/commit/${{ github.sha }}"
          curl -X POST https://techeer-029051b54345.herokuapp.com/api/v1/deploy/image \
          -H "Content-Type: application/json" \
          -H "X-API-Key: $X_API_KEY" \ 
          -d '{
                "imageName": "'"$IMAGE_NAME"'",
                "imageTag": "'"$DOCKER_IMAGE_TAG"'",
                "commitLink": "'"$commit_link"'",
                "environment": "production"
              }'