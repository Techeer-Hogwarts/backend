name: Other CI

permissions:
  contents: read   
  checks: write   
  
on:
  pull_request:
    branches:
      - '**' # 모든 브랜치에 PR 올릴 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # - name: Set up JDK 21
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '21'
      #     distribution: 'temurin'
      #     cache: gradle

      # - name: Grant execute permission for gradlew
      #   run: |
      #     cd techeerzip
      #     chmod +x gradlew

      # - name: Run tests with coverage
      #   run: |
      #     cd techeerzip
      #     ./gradlew test jacocoTestReport

      # - name: Publish Jacoco coverage report
      #   uses: PavanMudigonda/jacoco-reporter@v5.0
      #   with:
      #     coverage_results_path: techeerzip/build/reports/jacoco/test/jacocoTestReport.xml
      #     coverage_paths: techeerzip/build/reports/jacoco/test/html/index.html
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     minimum_coverage: 30
      #     fail_below_threshold: false
      #     output_level: inline
      #     coverage_report_name: JaCoCo Coverage

      - name: Show build number
        run: |
          echo "Build Number: ${{ github.run_number }}"
      - name: Show pull request number
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"
      - name: Set Docker Image Tag
        id: set_docker_image_tag
        env:
          PR_NUMBER: ${{ steps.get_pr_number.outputs.PR_NUMBER }}
        run: |
          DOCKER_IMAGE_TAG="0.${{ github.event.pull_request.number }}.${{ github.run_number }}-pre-dev"
          echo "Docker Image Tag: $DOCKER_IMAGE_TAG"
          echo "DOCKER_IMAGE_TAG"="${DOCKER_IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_IMAGE_TAG: ${{ steps.set_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/techeerism-spring:$DOCKER_IMAGE_TAG .
